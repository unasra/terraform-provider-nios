/*
IbClient

OpenAPI 3.x.x specification for the IbClient API

API version: 3.0.0
Contact: jkhatri@infoblox.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dns

import (
	"encoding/json"
)

// checks if the CreateRecordAResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRecordAResponse{}

// CreateRecordAResponse The response format to delete __ARecord__ objects.
type CreateRecordAResponse struct {
	Result               *RecordA `json:"result,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateRecordAResponse CreateRecordAResponse

// NewCreateRecordAResponse instantiates a new CreateRecordAResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRecordAResponse() *CreateRecordAResponse {
	this := CreateRecordAResponse{}
	return &this
}

// NewCreateRecordAResponseWithDefaults instantiates a new CreateRecordAResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRecordAResponseWithDefaults() *CreateRecordAResponse {
	this := CreateRecordAResponse{}
	return &this
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *CreateRecordAResponse) GetResult() RecordA {
	if o == nil || IsNil(o.Result) {
		var ret RecordA
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateRecordAResponse) GetResultOk() (*RecordA, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *CreateRecordAResponse) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given RecordA and assigns it to the Result field.
func (o *CreateRecordAResponse) SetResult(v RecordA) {
	o.Result = &v
}

func (o CreateRecordAResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRecordAResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateRecordAResponse) UnmarshalJSON(data []byte) (err error) {
	varCreateRecordAResponse := _CreateRecordAResponse{}

	err = json.Unmarshal(data, &varCreateRecordAResponse)

	if err != nil {
		return err
	}

	*o = CreateRecordAResponse(varCreateRecordAResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateRecordAResponse struct {
	value *CreateRecordAResponse
	isSet bool
}

func (v NullableCreateRecordAResponse) Get() *CreateRecordAResponse {
	return v.value
}

func (v *NullableCreateRecordAResponse) Set(val *CreateRecordAResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRecordAResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRecordAResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRecordAResponse(val *CreateRecordAResponse) *NullableCreateRecordAResponse {
	return &NullableCreateRecordAResponse{value: val, isSet: true}
}

func (v NullableCreateRecordAResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRecordAResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
